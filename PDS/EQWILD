/* REXX EQWILD
This is an internal function that does a comparison,
with a wild card character.
The wild card character is always equal to
the corresponding character in the input strings.
Comparison is done character by character.
Both strings must be of the same length.
The default wild character is the underscore: (_).
It is used like this:
if eqwild("JO_N", "JOAN", "_")
     then say "equal"
     else say "not equal"
The first input string may contain the wild card character.
*/
EQWILD: PROCEDURE
arg string1, string2, char1_wild .
call validate
if char1_wild = "" then char1_wild = "_"

string1 = strip(string1,b) /* drop lead + trail blanks */
string2 = strip(string2,b)

if length(string1) <> length(string2) then return 0
do i = 1 to length(string1)
   if substr(string1,i,1) = char1_wild then nop
   else if substr(string1,i,1) <> substr(string2,i,1)
   then do
          return 0 /* not equal*/
        end
end i
return 1 /* equal */

validate:
parse source . how_called .
if how_called = "COMMAND" then do
   say 'this is a function'
   say 'it may not be called from the command line'
   say 'call it from another REXX program:'
   say '   if eqwild("JO_N", "JOAN", "_")'
   say '      then say "equal"'
   say '      else say "not equal"'
   exit -1 /* give -1 to TSO,
         since program was called from command line */
   end
return /* was called properly */

