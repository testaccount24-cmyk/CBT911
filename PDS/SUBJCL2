/* rexx subjcl2
   submitting JCL for batch processing.
   Inserting variable values into the JCL
   using a compound, or stem variable

   place lines of jcl into the stem variable
   write the file,
   submit the file, then delete it
*/

Temp_file_name = "'userid.TEMP.SUBMIT.CNTL'"
Program_to_execute = "MYPROG1"

call msg "off"
"delete" Temp_file_name
call msg "on"

signal on error
"alloc ddn(tempfile) new reuse dsn("Temp_file_name")",
   "space(3,1) tracks"
signal off error

line_counter = 0
call add_line_to_array,
     "//useridA JOB (0),'TSO USER',"
call add_line_to_array,
     "//         TYPRUN=SCAN,  "
call add_line_to_array,
     "//         MSGLEVEL=1,CLASS=A,NOTIFY=userid"
call add_line_to_array,
     "//STEP1    EXEC PGM="PROGRAM_TO_EXECUTE
call add_line_to_array,
     "//INFILE   DD DSN=userid.INPUT.FILE,DISP=SHR "
call add_line_to_array,
     "//OUTFILE  DD SYSOUT=A "
call add_line_to_array,
     "//SYSIN    DD * "
call add_line_to_array,
     DATE() TIME()
call add_line_to_array,
     "/*"

/* display contents of stem variable */
do i = 1 to line.0
   say line.i
end i

"execio" line.0   "diskw tempfile (stem line. finis)"

"free ddname(tempfile)"

"submit" Temp_file_name

call msg "off"
"delete" Temp_file_name
call msg "on"
exit

error:
say "Unable to allocate temporary file" Temp_file_name
say "terminating"
exit

add_line_to_array:
arg line_to_add
line_counter      = line_counter + 1
line.0            = line_counter
line.line_counter = line_to_add
return

